package GUI;

import java.awt.*;
import java.awt.event.*;
import java.util.List;

import javax.swing.*;

import Application.*;
import Users.*;

public class LogInController implements ActionListener{
	
	private Application model;
	private LogIn view;
	
	public LogInController(Application model, LogIn view){
		this.model = model;
		this.view = view;
	}
	@Override
	public void actionPerformed(ActionEvent arg0) {
		
		String name = view.getUserName();
		String password = view.getPassword();
		
		if (model.logIn(name, password) == false){
			JOptionPane.showMessageDialog(view, "Invalid user and password combination.", "Error", JOptionPane.ERROR_MESSAGE);
		}
		else {
			view.setVisible(false);
			List<Course> courses = model.getCourses();
			Object[][] objs = new Object[courses.size()][1];
			
			int i = 0;
			for(Course c: courses){
				objs[i][0] = c.getTitle();
				i += 1;
			}
			if(model.getTeacher().getName().equals(name)){
				General frame = new GeneralTeacher();
				frame.addControllerLogOut(new LogOutController(model, frame));
				final Courses course = new Courses(frame, objs);
				frame.addPanel(course);
				course.setController(new MouseAdapter()	{
					public void mouseClicked(MouseEvent e) {
						
						int row = course.getTable().getSelectedRow();
						
						// Solo para ver si funcionaba
						JOptionPane.showMessageDialog(view,row, "Error", JOptionPane.ERROR_MESSAGE);
					}
				});
			}
			else{
				final GeneralStudent frame = new GeneralStudent();
				frame.addControllerGrades(new GradesController(model, frame));
				frame.addControllerLogOut(new LogOutController(model, frame));
				final Courses course = new Courses(frame, objs);
				frame.addPanel(course);
				course.setController(new MouseAdapter()	{
					public void mouseClicked(MouseEvent e) {
						
						int row = course.getTable().getSelectedRow();
						Course selected = model.getCourses().get(row);
						if(((Student) model.getCurrentUser()).getRegisteredCourses().contains(selected)){
							UICourse c = new UICourse(selected, model);
							frame.addPanel(c);
						}
						else{
							JFrame register = new JFrame();
							register.setLayout(new BorderLayout());
							
							JPanel message = new JPanel(new FlowLayout());
							JLabel label = new JLabel("You are not registered in " + selected.toString() + ". What would you like to do?");
							message.add(label);
							message.setVisible(true);
							
							JPanel buttons = new JPanel(new FlowLayout());
							JButton ok = new JButton("Register");
							JButton cancel = new JButton("Cancel");
							buttons.add(ok);
							buttons.add(cancel);
							buttons.setVisible(true);
							
							register.add(message, BorderLayout.CENTER);
							register.add(buttons, BorderLayout.SOUTH);
							
							Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
							register.setLocation(dim.width/2-register.getSize().width/2, dim.height/2-register.getSize().height/2);
						}
					}
				});
			}
		}
		//System.out.println("HEY");
	}
	
	

}
