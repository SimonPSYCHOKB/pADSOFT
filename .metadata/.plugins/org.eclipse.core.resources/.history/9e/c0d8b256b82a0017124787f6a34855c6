package GUI;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;

import Application.Application;
import Test.*;

public class QuestionCreation extends JFrame{

	private static final long serialVersionUID = 1L;
	
	private String question = " ";
	private double weig = 0;
	private double penalt = 0;

	public QuestionCreation(final Exercise e, Application model){
		super("Add question");
		final JFrame dispose = this;
		
		//BorderLayout
		setLayout(new BorderLayout());
		
		//Info
		JPanel info = new JPanel();
		SpringLayout layout = new SpringLayout();
		info.setLayout(layout);
		//Wording
		JLabel wording = new JLabel("Wording :");
		final JTextField w = new JTextField(20);
		
		layout.putConstraint(SpringLayout.NORTH, wording, 40, SpringLayout.NORTH, info);
		layout.putConstraint(SpringLayout.WEST, wording, 150, SpringLayout.WEST, info);
		layout.putConstraint(SpringLayout.NORTH, w, 40, SpringLayout.NORTH, info);
		layout.putConstraint(SpringLayout.WEST, w, 30, SpringLayout.EAST, wording);
		info.add(wording);
		info.add(w);
		
		//Question type
		String[] t = {"Single Answer", "Multiple Choice", "Free Text", "True-False"};
		JLabel type = new JLabel("Type of question :");
		final JComboBox<String> types = new JComboBox<String>(t);
		types.setSelectedIndex(0);
		
		layout.putConstraint(SpringLayout.NORTH, type, 30, SpringLayout.NORTH, wording);
		layout.putConstraint(SpringLayout.WEST, type, 150, SpringLayout.WEST, info);
		layout.putConstraint(SpringLayout.NORTH, types, 30, SpringLayout.NORTH, w);
		layout.putConstraint(SpringLayout.WEST, types, 30, SpringLayout.EAST, type);
		info.add(type);
		info.add(types);
		
		//Weight
		JLabel weight = new JLabel("Weight :");
		SpinnerModel sm = new SpinnerNumberModel(0,0,100,0.1);
		final JSpinner spinner = new JSpinner(sm);
		
		layout.putConstraint(SpringLayout.NORTH, weight, 30, SpringLayout.NORTH, type);
		layout.putConstraint(SpringLayout.WEST, weight, 150, SpringLayout.WEST, info);
		layout.putConstraint(SpringLayout.NORTH, spinner, 30, SpringLayout.NORTH, types);
		layout.putConstraint(SpringLayout.WEST, spinner, 30, SpringLayout.EAST, weight);
		info.add(weight);
		info.add(spinner);
		
		//Penalty
		JLabel penalty = new JLabel("Penalty :");
		SpinnerModel sm2 = new SpinnerNumberModel(0,0,100,0.1);
		final JSpinner spinner2 = new JSpinner(sm2);
		
		layout.putConstraint(SpringLayout.NORTH, penalty, 30, SpringLayout.NORTH, weight);
		layout.putConstraint(SpringLayout.WEST, penalty, 150, SpringLayout.WEST, info);
		layout.putConstraint(SpringLayout.NORTH, spinner2, 30, SpringLayout.NORTH, spinner);
		layout.putConstraint(SpringLayout.WEST, spinner2, 30, SpringLayout.EAST, penalty);
		info.add(penalty);
		info.add(spinner2);
		
		info.setVisible(true);
		info.setPreferredSize(new Dimension(500, 150));
		
		add(info, BorderLayout.CENTER);
		
		//Buttons
		JPanel buttons = new JPanel();
		buttons.setLayout(new FlowLayout());
		
		JButton cancel = new JButton("Cancel");
		JButton next = new JButton("Next");
		buttons.add(cancel);
		buttons.add(next);
		
		cancel.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent arg0) {
				dispose.dispose();
			}		
		});
		
		next.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent arg0) {
				question = w.getText();
				weig = (double) spinner.getValue();
				penalt = (double) spinner2.getValue();
		        String type = (String)types.getSelectedItem();
		        if(type.equals("Multiple Choice"))
		        	multipleAnswer();
		        else if(type.equals("Single Answer"))
		        	singleAnswer();
		        else if(type.equals("Free Text"))
		        	freeText();
		        else trueFalse();
			}

			private void trueFalse() {
				final JFrame tf = new JFrame("True-False");
				tf.setLayout(new BorderLayout());
				JPanel word = new JPanel();
				SpringLayout layout  = new SpringLayout();
				word.setLayout(layout);
				JLabel wording = new JLabel("Wording :");
				layout.putConstraint(SpringLayout.NORTH, wording, 30, SpringLayout.NORTH, word);
				layout.putConstraint(SpringLayout.WEST, wording, 80, SpringLayout.WEST, word);
				word.add(wording);
				JTextField input = new JTextField(10);
				layout.putConstraint(SpringLayout.NORTH, input, 30, SpringLayout.NORTH, word);
				layout.putConstraint(SpringLayout.WEST, input, 22, SpringLayout.EAST, wording);
				word.add(input);
				JLabel answer = new JLabel("Answer :");
				layout.putConstraint(SpringLayout.NORTH, answer, 20, SpringLayout.NORTH, wording);
				layout.putConstraint(SpringLayout.WEST, answer, 80, SpringLayout.WEST, word);
				word.add(answer);
				final JTextField answ = new JTextField(10);
				layout.putConstraint(SpringLayout.NORTH, answ, 20, SpringLayout.NORTH, input);
				layout.putConstraint(SpringLayout.WEST, answ, 30, SpringLayout.EAST, answer);
				word.add(answ);
				word.setPreferredSize(new Dimension(400, 100));
				word.setVisible(true);
				
				JPanel buttons = new JPanel(new FlowLayout());
				JButton cancel = new JButton("Cancel");
				JButton done = new JButton("Done");
				buttons.add(cancel);
				buttons.add(done);
				buttons.setVisible(true);
				
				tf.add(word, BorderLayout.CENTER);
				tf.add(buttons, BorderLayout.SOUTH);
				
				tf.setVisible(true);
				tf.setSize(400, 150);
				Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
				tf.setLocation(dim.width/2-tf.getSize().width/2, dim.height/2-tf.getSize().height/2);
				tf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				
				cancel.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent arg0) {
						tf.dispose();
					}
				});
				done.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent arg0) {
						e.addQuestion(new TrueFalse(question, weig, penalt, answ.getText()));
					}
				});
			}

			private void freeText() {
				// TODO Auto-generated method stub
				
			}

			private void singleAnswer() {
				// TODO Auto-generated method stub
				
			}

			private void multipleAnswer() {
				
			}
		});
		
		add(buttons, BorderLayout.SOUTH);
		
		setSize(600, 250);
		Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
		setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
		
		setVisible(true);
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	}
}
