package GUI;

import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SpringLayout;
import javax.swing.table.DefaultTableModel;

import Statistics.CourseStatistic;
import Statistics.Statistic;

public class ExercisesStats extends JPanel{

	private static final long serialVersionUID = 1L;
	
	JTable exercises;
//	JButton back;

	public ExercisesStats(CourseStatistic current){
		final List<Statistic> exe = current.getStatistics();
//		System.out.println(cs.toString());
		
		Object[][] objs = new Object[exe.size()][2];
		String[] titles = {"Exercise", "Mean"};
		
		int i = 0;
		for(Statistic e : exe){
			objs[i][0] = "Exercise " + i;
			objs[i][1] = e.getMean();
			i += 1;
		}
		
		exercises = new JTable(objs, titles);
		DefaultTableModel tableModel = new DefaultTableModel(objs, titles) {

			private static final long serialVersionUID = 1L;

			@Override
		    public boolean isCellEditable(int row, int column) {
		       //all cells false
		       return false;
		    }
		};
		exercises.setModel(tableModel);
		exercises.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		exercises.setVisible(true);
		
		JScrollPane scrollBar =	new	JScrollPane(exercises);
		
		JButton back = new JButton("Back");
		
		SpringLayout layout = new SpringLayout();
		setLayout(layout);
		
		layout.putConstraint(SpringLayout.HORIZONTAL_CENTER, scrollBar, 0, SpringLayout.HORIZONTAL_CENTER, this);
		layout.putConstraint(SpringLayout.NORTH, scrollBar, 50, SpringLayout.NORTH, this);
		layout.putConstraint(SpringLayout.HORIZONTAL_CENTER, back, 0, SpringLayout.HORIZONTAL_CENTER, this);
		layout.putConstraint(SpringLayout.NORTH, back, 50, SpringLayout.SOUTH, this);

		add(back);
		add(scrollBar);
		setVisible(true);
	}
	
	public void addController(MouseAdapter ma){
		exercises.addMouseListener(ma);
	}
	
//	public void addControllerBack(ActionListener al){
//		back.addActionListener(al);
//	}
}
