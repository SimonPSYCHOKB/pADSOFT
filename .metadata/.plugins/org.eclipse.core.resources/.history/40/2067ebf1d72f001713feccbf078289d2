package statistics;

import java.io.Serializable;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.List;

import Test.Answer;
import Test.Question;


/**
 * @author Simon Valcarcel
 * @author Blanca Martin
 * 
 * This class contains the information of the statistic of a question
 *
 */
public class QuestionStatistic extends Stats implements Serializable{

	private static final long serialVersionUID = 1L;
	
	private int correctNumber=0;
	private int wrongNumber=0;
	private int blankNumber=0;
	
	private Question question;
	
	/**
	 * Constructor
	 * @param q - The Question for the statistic
	 * @param aGiven - List of Answers to the question 
	 */
	public QuestionStatistic (Question q, List<Answer> aGiven ){
		super();
		question = q;
		double people=0;
		if(aGiven == null) return;
		for(Answer a : aGiven){
			if(a.isBlank()){
				blankNumber++;
			}
			else if(question.checkIfCorrect(a)){
				correctNumber++;
			}else{
				wrongNumber++;
			}
			
			people++;
			
		}//For answer
		
		//Compute average
		
		setMean(((double)(correctNumber/people))*10);
		
	}
	
	/**
	 * This method returns the correct number of answers to the question
	 * @return correctNumber - int
	 */
	public int getCorrectNumber() {
		return correctNumber;
	}
	
	/**
	 * This method returns the wrong number of answers to the question
	 * @return wrongNumber - int
	 */
	public int getWrongNumber() {
		return wrongNumber;
	}
	
	/**
	 * This method returns the blank number of answers to the question
	 * @return blankNumber - int
	 */
	public int getBlankNumber() {
		return blankNumber;
	}
	
	@Override
	public String toString(){
		NumberFormat formatter = new DecimalFormat("#0.00"); 
		return "mean: "+getMean()+ " correct: " +formatter.format(correctNumber)+
	" wrong: " + formatter.format(wrongNumber) +
	" blank: " + formatter.format(blankNumber);
	}

	
	
	

}
