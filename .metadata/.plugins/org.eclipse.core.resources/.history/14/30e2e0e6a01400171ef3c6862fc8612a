import java.io.Serializable;

/**
 * @author Simon Valcarcel
 * @author Blanca Martin
 * 
 * This class makes reference to the users of the application
 */
public abstract class User implements Serializable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	protected String fName;
	protected String lName;
	protected String password;
	protected String email;	
	
	/**
	 * Constructor
	 * 
	 * @param fname - String with the first name
	 * @param lname - String with the last name
	 * @param password - String with the password
	 * @param email - String with the email
	 */
	public User(String fname,String lname,  String password, String email){
		this.fName = fname;
		this.lName = lname;
		this.email = email;
		this.password = password;
	}
	
	/**
	 * This method returns the full name of the user
	 * @return String with the first and last name of the user
	 */
	public String getName(){
		return fName + " " + lName;
	}
	
	/**
	 * This method returns the email of a user
	 * @return email - String with the email address
	 */
	public String getEmail(){
		return email;
	}
	
	/**
	 * This method checks whether the password is correct
	 * @param attempt - String with the password
	 * @return true if the password is correct, false if it is not
	 */
	public boolean ValidatePassword(String attempt){
		if (this.password.equals(attempt)) {
			return true;
		}
		else return false;
	}
	

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		User other = (User) obj;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (fName == null) {
			if (other.fName != null)
				return false;
		} else if (!fName.equals(other.fName))
			return false;
		if (lName == null) {
			if (other.lName != null)
				return false;
		} else if (!lName.equals(other.lName))
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		return true;
	}
	
	

}
